#!/usr/bin/env ruby

require 'bundler/setup'

require 'dotenv'
require 'uri'
require 'mongo'
require 'active_support/inflector'

Dotenv.load

def format_uri(uri)
  index = (uri =~ /@/)
  index = (uri =~ /\/{2}/) + 1 unless index
  uri[index+1..-1]
end

def slug_for(title, id)
	id = id.to_s.chars
	suffix = id.first(8).join + id.last(4).join # hex values: generation_time + counter
	slug = ActiveSupport::Inflector.transliterate(title)
	slug = "#{slug.downcase.strip.gsub(/[^\w-]/, '-')}-#{suffix}".squeeze('-')
	slug.sub(/^-/, '')
end

db_uri = ENV['MONGODB_URI']

puts "Updating database at #{format_uri(db_uri)}"
print "Press 'Y' to continue, anything else to abort (y/N) "

abort "Aborting!" if gets.downcase != "y\n"

print "Processing... "

Mongo::Logger.logger.level = ::Logger::ERROR
db = Mongo::Client.new(db_uri)

db['events'].indexes.create_one({ :slug => 1 }, :unique => true)

db['events'].find.each do |event|
  created_at = event['created_at'] || event['_id'].generation_time
  slug = event['slug'] || slug_for(event['title'], event['_id'])
  db['events'].find(_id: event['_id']).update_one({'$set' => {created_at: created_at, slug: slug}})
end

puts "Done!"
